
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2017 Job and Esther Technologies, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class:

var fontFamilyStyles static as map<string, string>
var fontSizeStyles static as map<string, string>
var fontBoldStyles static as map<string, bool>
var colorStyles static as map<string, Color>

func setFontFamilyStyle(style as string, fontFamily as string) static
{
	if not fontFamilyStyles:
		fontFamilyStyles = new map<string, string>
	fontFamilyStyles[style] = fontFamily
}

func setFontSizeForStyle(style as string, fontSize as string) static
{
	if not fontSizeStyles:
		fontSizeStyles = new map<string, string>
	fontSizeStyles[style] = fontSize
}

func setFontBoldStyle(style as string, bold as bool) static
{
	if not fontBoldStyles:
		fontBoldStyles = new map<string, bool>
	fontBoldStyles[style] = bold
}

func getFontBoldForStyle(style as string) static as bool:
	return Map.getValue(fontBoldStyles, style)

func setColorStyle(style as string, color as Color) static
{
	if not colorStyles:
		colorStyles = new map<string, Color>
	colorStyles[style] = color
}

func getFontFamilyForStyle(style as string) static as string:
	return Map.getValue(fontFamilyStyles, style)

func getFontSizeForStyle(style as string) static as string:
	return Map.getValue(fontSizeStyles, style)

func getColorForStyle(style as string) static as Color:
	return Map.getValue(colorStyles, style)
