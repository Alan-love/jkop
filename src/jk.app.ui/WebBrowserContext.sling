
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2016-2024 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.url

class:

func getPageURL static as string
{
	IFDEF "target_browser_js" {
		var url = lang "js" as string? {{{ window.location.href }}}
		if not url:
			url = ""
		return url
	}
	ELSE {
		ERROR NOT_SUPPORTED
	}
}

func getPageHash static as string?
{
	IFDEF "target_browser_js" {
		return lang "js" as string? {{{ window.location.hash }}}
	}
	ELSE {
		ERROR NOT_SUPPORTED
	}
}

func getQueryString static as string?
{
	IFDEF "target_browser_js" {
		var url = lang "js" as string? {{{ window.location.href }}}
		if String.isEmpty(url):
			return null
		var q = String.getIndexOfCharacter(url, '?')
		if q < 0:
			return null
		var v = String.getEndOfString(url, q + 1)
		var hash = String.getIndexOfCharacter(v, '#')
		if hash >= 0:
			v = String.getSubString(v, 0, hash)
		return v
	}
	ELSE {
		ERROR NOT_SUPPORTED
	}
}

func getQueryStringValue(key as string) static as string?
{
	var qss = getQueryString()
	if not qss:
		return null
	var qs = QueryString.parse(qss)
	return Map.getValue(qs, key)
}
