
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2016-2024 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.url

class:

IFDEF "target_browser_js"
{
	func onHashChanged static
	{
		var hash = WebBrowserContext.getPageHash()
		if hash {
			var route = String.getSubString(hash, 1, String.getLength(hash) - 1)
			if String.isEmpty(route):
				route = "/"
			var url = URL.forString(route)
			route = url.getPath() ?? ""
			if listener:
				listener.onRouteChanged(route)
		}
	}
}

var listener static as RouterListener?

func initialize(l as RouterListener) static
{
	listener = l
	IFDEF "target_browser_js" {
		lang "js" {{{
			window.onhashchange = function(event) {
				JkUiRouter.onHashChanged();
			}
		}}}
	}
}

func goToDefault static
{
	IFDEF "target_browser_js" {
		onHashChanged()
	}
	ELSE {
		if listener:
			listener.onRouteChanged("/")
	}
}

func go(route as string) static
{
	IFDEF "target_browser_js" {
		var r = route
		lang "js" {{{
			window.location.hash = "#" + r;
		}}}
	}
	ELSE {
		if listener:
			listener.onRouteChanged(route)
	}
}
