
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2016-2024 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.log
import jk.process

class:

prop tasks = new map<string,function<() async throws Exception>>

func setTask(action as string, task as function<() async throws Exception>):
	Map.setValue(tasks, action, task)

func execute(ctx as LoggingContext, action as string?) async virtual as int
{
	IFDEF "target_node_js" {
		lang "js" {{{
			let interval = setInterval(() => {}, 100000);
		}}}
	}
	var v = 0
	try {
		if not action {
			Log.error(ctx, "No action specified.")
			println
			println "Available actions:"
			println
			foreach action in Map.getKeys(tasks):
				println action
			println
			v = 1
		}
		else {
			var task = Map.getValue(tasks, action)
			if not task:
				Error.throw("unsupportedAction", action)
			await task()
		}
	}
	catch e {
		Log.error(ctx, String.asValueOrEmptyString(e))
		v = 1
	}
	IFDEF "target_node_js" {
		lang "js" {{{
			clearInterval(interval);
		}}}
	}
	return v
}
