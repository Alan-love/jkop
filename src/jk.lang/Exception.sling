
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2016-2024 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class is StringObject abstract:

func forString(string as string) static as this:
	return ExceptionWithString.forString(string)

func forError(error as Error) static as this:
	return ExceptionWithError.forError(error)

func forErrorCode(code as string) static as this:
	return ExceptionWithError.forError(Error.forCode(code))

IFDEF "target_java"
{
	extend [magical:java.lang.RuntimeException]
}

IFDEF "target_kotlin"
{
	extend [magical:kotlin.Exception]
}
ELSE IFDEF "target_dotnet_cs"
{
	extend [magical:System.Exception]
}
ELSE IFDEF "target_swift"
{
	implement [magical:Swift.Error]
}
ELSE IFDEF "target_ios_objc"
{
	extend [magical:NSException]
}
ELSE IFDEF "target_node_js"
{
	extend [magical:Error]
}

ctor:
	nop

func toString implement abstract as string
