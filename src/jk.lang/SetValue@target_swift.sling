
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2016-2024 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class <T extends [magical:Swift.Hashable]>:

func forData(data as [magical:Swift.Array<T>]) static as this
{
	var v = new this()
	lang "swift" (data) {{{
		for item in data {
			v.add(item)
		}
	}}}
	return v
}

var data public as [magical:Swift.Set<T>]

ctor:
	data = lang "swift" as [magical:Swift.Set<T>] {{{ Swift.Set<T>() }}}

func add(value as T):
	lang "swift" (data, value) {{{
		data.insert(value)
	}}}

func remove(value as T):
	lang "swift" (data, value) {{{
		data.remove(value)
	}}}

func clear:
	lang "swift" (data) {{{
		data.removeAll()
	}}}

func getSize as int:
	return lang "swift" (data) as int {{{ data.count }}}

func contains(value as T) as bool:
	return lang "swift" (data, value) as bool {{{ data.contains(value) }}}

func getValues as vector<T>
{
	var v = new vector<T>
	lang "swift" (data) {{{
		for value in data {
			v.append(value)
		}
	}}}
	return v
}
