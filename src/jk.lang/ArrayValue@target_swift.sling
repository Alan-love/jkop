
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2016-2024 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class <T>:

func forSize(size as int, defaultValue as T) static as this:
	return new this(lang "swift" (size, defaultValue) as [magical:Swift.Array<T>] {{{ Swift.Array<T>(repeating: defaultValue, count: size) }}})

func forData(data as [magical:Swift.Array<T>]) static as this:
	return new this(data)

var data public as [magical:Swift.Array<T>]

indexer (index as int) as T
{
	set:
		setValue(index, value)
	get:
		return getValue(index)
}

ctor(data as [magical:Swift.Array<T>]):
	this.data = data

func getSize as int:
	return lang "swift" (data) as int {{{ data.count }}}

func getValue(index as int) as T:
	return lang "swift" (index) as T {{{ data[index] }}}

func setValue(index as int, value as T):
	lang "swift" (index, value) {{{
		data[index] = value
	}}}

func contains(value as T) as bool
{
	var sz = getSize()
	for(var n = 0 ; n < sz ; n++) {
		if DynamicValue.equals(value, getValue(n)):
			return true
	}
	return false
}
