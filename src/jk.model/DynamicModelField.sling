
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2016-2024 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class:

const TYPE_UNKNOWN = 0
const TYPE_OBJECT = 1
const TYPE_STRING = 2
const TYPE_BUFFER = 3
const TYPE_INTEGER = 4
const TYPE_LONG_INTEGER = 5
const TYPE_DOUBLE = 6
const TYPE_BOOLEAN = 7
const TYPE_VECTOR = 8
const TYPE_MAP = 9

prop name as string
prop encodedName as string
prop type as int = TYPE_UNKNOWN
prop typeinfo as typeinfo?
prop description as string?
prop tags as vector<string>?

func hasTag(tag as string) as bool
{
	if var tags = this.tags: foreach tt in tags {
		if tt == tag:
			return true
	}
	return false
}

func addToTags(tag as string)
{
	if not tags:
		tags = new vector<string>
	tags += tag
}
