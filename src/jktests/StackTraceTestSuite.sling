
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2016-2024 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.log
import jk.test

class is TestSuite:

class MyException is Exception is StringObject
{
	func instance(file as string, line as string, column as string) static as this:
		return new this() {
			file file
			line line
			column column
		}

	prop file as string
	prop line as string
	prop column as string

	func toString as string
	{
		var sb = file .. ":" .. line .. ":" .. column .. ": " .. VALUE "__THIS__"
		return sb
	}
}

func process(str as string) static
{
	if not (str == "AA") {
		var excp = MyException.instance(VALUE "__FILE__", VALUE "__LINE__", VALUE "__COLUMN__")
		throw excp
	}
}

func initialize override
{
	testSuiteName = "Stack Trace Tests"
	addToTestCases(new TestCase() {
		name "Test Stack Trace"
		handler func async {
			try {
				process("bb")
			}
			catch e as MyException {
				var str = (e as! MyException).toString()
			}
		}
	})
}
