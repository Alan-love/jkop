
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2016-2024 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.log
import jk.test

class is TestSuite:

func initialize override
{
	testSuiteName = "Variable reference tests"
	addToTestCases(new TestCase() {
		name "Test variable references"
		handler func async {
			IFDEF "target_java" {
				// FIXME: Create a VariableReference mechanism test suitable for target_java
				ERROR "notImplemented"
			}
			ELSE {
				var n = 10
				var vr = new VariableReference<int>() {
					setter func(value as int) => n = value
					getter func as int => n
				}
				TestCaseUtil.ASSERT(vr.get() == 10)
				vr.set(999)
				TestCaseUtil.ASSERT(vr.get() == 999)
			}
		}
	})
}
