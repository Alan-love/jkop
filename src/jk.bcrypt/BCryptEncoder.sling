
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2016-2024 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.log

class abstract:

func instance(ctx as LoggingContext) static as this
{
	IFDEF "target_dotnet_cs" {
		return new BCryptEncoderForDotnetCS() {
			ctx ctx
		}
	}
	ELSE IFDEF "target_sushi" {
		return new BCryptEncoderSushi() {
			ctx ctx
		}
	}
	ELSE {
		return new BCryptEncoderGeneric() {
			ctx ctx
		}
	}
}

func forLoggingContext(ctx as LoggingContext) static as this:
	return instance(ctx)

prop ctx as LoggingContext

func generateSalt as string:
	return generateSaltWithRounds(10)

func generateSaltWithRounds(logRounds as int) as string:
	return generateSaltWithRoundsAndVersion(logRounds, "2a")

func generateSaltWithRoundsAndVersion(logRounds as int, bCryptVersion as string) abstract as string
func hashPassword(password as string, salt as string) abstract as string
func checkPassword(password as string, hash as string) abstract as bool
