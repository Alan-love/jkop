
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2017 Job and Esther Technologies, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class is ApplicationContext abstract:

import cape

var styles as map<string, map<string, object>>

func setStyle(id as string, style as map<string, object>)
{
	if not styles:
		styles = new map<string, map<string, object>>
	styles[id] = style
}

func getStyle(id as string, style as string) as object
{
	var ss = Map.getValue(styles, id)
	if not ss:
		return null
	return Map.getValue(ss, style)
}

func getString(id as string, style as string) as string:
	return String.asString(getStyle(id, style))

func getPixelsForStyle(id as string, style as string) as int:
	return getHeightValue(getString(id, style))

func getTextColorForStyle(style as string) as Color:
	return Color.asColor(getStyle(style, "textColor"))

func getBackgroundColorForStyle(style as string) as Color:
	return Color.asColor(getStyle(style, "backgroundColor"))

func getPressedColorForStyle(style as string) as Color:
	return Color.asColor(getStyle(style, "pressedColor"))

func getFontFamilyForStyle(id as string) as string:
	return getString(id, "fontFamily")

func getFontSizeForStyle(style as string) as int:
	return getPixelsForStyle(style, "fontSize")

func getPaddingForStyle(style as string) as int:
	return getPixelsForStyle(style, "padding")

func getFontBoldForStyle(style as string) as bool:
	return Boolean.asBoolean(getStyle(style, "fontBold"))

func getRoundingRadiusForStyle(style as string) as int:
	return getPixelsForStyle(style, "roundingRadius")

func getApplicationDataDirectory abstract as cape.File
func getResourceImage(id as string) abstract as Image
func getImageForBuffer(buffer as buffer, mimeType as string) abstract as Image
func showMessageDialog(title as string, message as string) abstract
func showMessageDialog(title as string, message as string, callback as function) abstract
func showConfirmDialog(title as string, message as string, okcallback as function, cancelcallback as function) abstract
func showErrorDialog(message as string) abstract
func showErrorDialog(message as string, callback as function) abstract
func getScreenTopMargin  abstract as int
func getScreenWidth  abstract as int
func getScreenHeight  abstract as int
func getScreenDensity  abstract as int
func getHeightValue(spec as string)  abstract as int
func getWidthValue(spec as string)  abstract as int
func startTimer(timeout as long, callback as function) abstract
