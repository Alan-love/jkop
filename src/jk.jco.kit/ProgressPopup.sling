
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2016-2024 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.log
import jk.jco.common

class #jco:

func show(component as JcoComponent, text as string) static throws Exception as PopupLayer
{
	var customData as DynamicMap?
	var app = component.getApplicationOrNull()
	if app:
		customData = app.customData
	if customData {
		customData = customData.duplicateMap()
	}
	else {
		customData = new DynamicMap()
	}
	customData.setString("textColor", "{progressPopupTextColor|white}")
	var popup = PopupLayer.instance()
	popup.showAsLayer(component, func(context as JcoComposeContext) throws Exception {
		compose {
			<LayerWidget>
				<CanvasWidget backgroundColor="#00000080" />
				<AlignWidget>
					<LayerWithPaddingWidget customData=@{customData} widthRequest="{popupWidthRequest|120mm}" padding="{popupPadding|5mm}">
						<CanvasWidget backgroundColor="{progressPopupBackgroundColor|black}" rounding="{popupRounding|2mm}" />
						<VerticalBoxWidget spacing="{progressPopupSpacing|4mm}" padding="{progressPopupPadding|10mm}" alignment="center">
							<SpinnerWidget image="{progressPopupImage|}" />
							<LabelWidget alignment="center" text=@{text} font="{progressPopupFont|4mm}" wrapping="true" />
						</VerticalBoxWidget>
					</LayerWithPaddingWidget>
				</AlignWidget>
			</LayerWidget>
		}
	})
	return popup
}
