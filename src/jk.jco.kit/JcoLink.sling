
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2016-2023 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.jco.common

class is JcoComponent #jco:

prop text as string #content
prop textColor as string #style = "blue"
prop textHoverColor as string #style = "#CCCCFF"
prop textUnderline as string #style = "true"
prop handler as function<void>?

stylesheet
{
    a {
        color @{textColor}
        text-decoration @{Boolean.asValueOrThrowError(textUnderline) ? "underline" : "none"}
    }
    a:hover {
        color @{textHoverColor}
    }
}

markup
{
	<a var link href="#">
		{
            if String.isNotEmpty(text):
                render text
			foreach child in children:
				render child
		}
	</a>
}

func onRendered override
{
	var link = this.link
	if link {
		IFDEF "target_browser_js" {
			lang "js" {{{
				link.addEventListener('click', () => {
					this.onLinkClicked()
				})
			}}}
		}
	}
}

func onLinkClicked
{
    var oc = handler
    if oc:
        oc()
}
