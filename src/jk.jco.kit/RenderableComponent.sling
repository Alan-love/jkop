
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2016-2024 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.log
import jk.jco.common
import jk.gfx.render

class is JcoSizeAwareComponent abstract #jco #component:

func getRenderer abstract as Renderer

func onComponentResized override
{
	base.onComponentResized()
	IFDEF "target_ios_swift" {
		lang "swift" {{{
			setNeedsDisplay()
		}}}
	}
}

IFDEF "target_ios_swift"
{
	import [magical:UIKit]

	func draw(rect as [magical:CGRect]) override #magical
	{
		var context = lang "swift" as [magical:CGContext]? {{{ UIGraphicsGetCurrentContext() }}}
		if not context {
			Log.error(ctx, "No graphics context!")
			return
		}
		var ctx = RenderingContextForIosSwift.forContext(context)
		var renderer = getRenderer()
		renderer.render(ctx, lang "swift" as double {{{ rect.width }}}, lang "swift" as double {{{ rect.height }}}, getPpi())
	}
}
ELSE IFDEF "target_browser_js"
{

}