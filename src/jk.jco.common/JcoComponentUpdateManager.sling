
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2016-2024 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.log

class:

var updateComponents static as vector<JcoComponent>?
var updating static = false

func scheduleUpdate static private
{
	var handler #used = func {
		updating = true
		while updateComponents {
			var components = updateComponents
			updateComponents = null
			foreach component in components {
				try {
					component.executeUpdate()
				}
				catch e as Exception {
					Log.error(component.ctx, e.toString())
				}
			}
		}
		updating = false
	}
	IFDEF "target_browser_js" {
		lang "js" {{{
			setTimeout(handler, 0);
		}}}
	}
	ELSE IFDEF "target_ios_swift" {
		lang "swift" {{{
			RunLoop.main.perform(handler)
		}}}
	}
	ELSE {
		ERROR NOT_IMPLEMENTED
	}
}

func setNeedsUpdate(component as JcoComponent) static
{
	var cc = updateComponents
	if not cc {
		cc = new vector<JcoComponent>
		updateComponents = cc
		if not updating:
			scheduleUpdate()
	}
	cc += component
}
