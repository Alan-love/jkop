
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2016-2024 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.gfx

class:

func forComponent(component as JcoComponent) static as this:
	return new this() {
		component component
	}

prop component as JcoComponent

func getCustomDataValueOrNull(key as string) as string?
{
	foreach cc in component.iterateParentComponents() {
		var cd = cc.customData
		if cd {
			var v = cd.getStringOrNull(key)
			if v:
				return v
		}
	}
	return null
}

func getFontValue(value as string) as FontDescription
{
	var v = FontDescription.parse(getValue(value))
	if v.family == null || v.size == null {
		var cdf = getCustomDataValueOrNull("font")
		if cdf {
			var cdfv = FontDescription.parse(cdf)
			if v.family == null:
				v.family = cdfv.family
			if v.size == null:
				v.size = cdfv.size
		}
	}
	return v
}

func getValue(value as string) as string
{
	var key as string?
	var dval as string?
	if String.startsWith(value, "{") && String.endsWith(value, "}") {
		var ss = String.getSubString(value, 1, String.getLength(value) - 2)
		var comps = String.split(ss, '|', 2)
		key = Vector.getValue(comps, 0)
		dval = Vector.getValue(comps, 1)
	}
	else {
		key = value
		dval = null
	}
	if not key:
		key = ""
	var val = getCustomDataValueOrNull(key)
	if not val:
		val = dval
	if val:
		val = getValue(val)
	if not val:
		val = key
	return val
}
