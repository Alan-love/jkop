
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2016-2024 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.json
import jk.model
import jk.fs
import jk.yaml

class:

func parseJson(object as dynamic?, result as DynamicModel) static throws Exception
{
	if object is string:
		result.fromDynamicMap(JSONParser.parseStringAsMap(object as! string))
	else if object is DynamicMap:
		result.fromDynamicMap(object as! DynamicMap)
	else if object is buffer {
		var v = String.forUTF8Buffer(object as! buffer)
		parseJson(v, result)
	}
	else if object is File {
		var v = JSONParser.parseFileAsMap(object as! File)
		result.fromDynamicMap(v)
	}
	else:
		Error.throw("unsupportedDataObjectForOpenApiParser", object)
}

func parseYaml(object as dynamic?, result as DynamicModel) static throws Exception
{
	if object is string {
		var v = YAMLParser.parse(object as! string)
		result.fromDynamicMap(v)
	}
	else if object is buffer {
		var v = String.forUTF8Buffer(object as! buffer)
		parseYaml(v, result)
	}
	else:
		Error.throw("unsupportedDataObjectForOpenApiParser", object)
}
