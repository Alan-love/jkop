
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2016-2023 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.log
import jk.time
import jk.thread

class:

class DNSCacheEntry
{
	pvar ip as string?
	pvar timestamp as long

	func create(ip as string) static as this
	{
		var v = new this()
		v.setIp(ip)
		v.setTimestamp(SystemClock.asSeconds())
		return v
	}
}

prop ctx as LoggingContext

var entries = new DynamicMap()

func add(hostname as string, ip as string) private:
	entries.setObject(hostname, DNSCacheEntry.create(ip))

func getCachedEntry(hostname as string) private as string?
{
	var v as DNSCacheEntry?
	v = entries.get(hostname) as DNSCacheEntry
	if v {
		if SystemClock.asSeconds() - v.getTimestamp() > 60  * 60 {
			entries.remove(hostname)
			v = null
		}
	}
	if v:
		return v.getIp()
	return null
}

func resolve(hostname as string) as string?
{
	var v = getCachedEntry(hostname)
	if v:
		return v
	var dr = DNSResolver.instance(ctx)
	v = dr.getIPAddress(hostname)
	if v:
		add(hostname, v)
	return v
}
