
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2020-2022 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class #widget:

IFDEF "target_html"
{
	func prepareElement(element as object) override
	{
		base.prepareElement(element)
		HTMLDOM.setStyle(element, "-webkit-box-shadow", "0 0.75rem 1.5rem rgba(18, 38, 63, .03)")
		HTMLDOM.setStyle(element, "box-shadow", "0 0.75rem 1.5rem rgba(18, 38, 63, .03)")
	}
}

ui CardFrameWidget
{
	VerticalBoxWidget {
		LayerWidget header {
			margin = context.getHeightValue("6mm")
			LabelWidget title {
				fontSize = context.getStylePixels("jkop-kit", "mediumFont")
				fontFamily = context.getStyleString("jkop-kit", "fontFamilyMedium")
			}
		}
		SeparatorWidget sp {
			orientation = SeparatorWidget.HORIZONTAL
		}
		LayerWidget layer {
			marginLeft = context.getStylePixels("jkop-kit", "cardMargin", "6mm")
			marginRight = context.getStylePixels("jkop-kit", "cardMargin", "6mm")
			marginBottom = context.getHeightValue("3mm")
			marginTop = context.getHeightValue("3mm")
		}
		SeparatorWidget spp {
			orientation = SeparatorWidget.HORIZONTAL
		}
		AlignWidget actions {
			marginTop = context.getHeightValue("3mm")
			marginBottom = context.getHeightValue("3mm")
			marginLeft = context.getStylePixels("jkop-kit", "cardMargin", "6mm")
			marginRight = context.getStylePixels("jkop-kit", "cardMargin", "6mm")
			HorizontalBoxWidget hbox : 1.0, 0.5 {
				spacing = context.getHeightValue("2mm")
				PrimaryButtonWidget {
					text = "Submit"
					clickHandler = func {
						if widgetSaveClickHandler:
							widgetSaveClickHandler()
					}
				}
				SecondaryButtonWidget {
					text = "Cancel"
					backgroundColor = Color.instance("#f7f8fa")
					outlineColor = Color.instance("#e2e5ec")
					outlineWidth = context.getHeightValue("1px")
					textColor = Color.instance("#595d6e")
					clickHandler = func {
						if widgetCancelClickHandler:
							widgetCancelClickHandler()
					}
				}
			}
		}
	}
}

ctor(ctx as GuiApplicationContext)
{
	base(ctx)
	forceCreateWidget()
	created = true
}

pvar widgetSaveClickHandler as function
pvar widgetCancelClickHandler as function 
var created = false

func setWidgetTitle(value as string) as this
{
	title.setWidgetText(value)
	return this
}

func addWidget(w as Widget) override as ContainerWidget
{
	if w && created {
		layer.addWidget(w)
		return this
	}
	Widget.addChild(this, w)
	return this
}
