
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2020-2022 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.widget.uikit.boxicons

class #widget:

ui LayerWithBackgroundColorWidget
{
	color = context.getStyleColor("jkop-kit", "iconButtonBackgroundColor", "#000000")
	HorizontalBoxWidget hbox {
		spacing = context.getStylePixels("jkop-kit", "iconButtonSpacing", "1mm")
		margin = context.getHeightValue("500um")
		LayerWidget iconLayer {
			widthRequest = context.getHeightValue("6mm")
			AlignWidget {
				BoxIconWidget icon : 0.5, 0.5, true {
					color = context.getStyleColor("jkop-kit", "iconButtonTextColor", "#000000")
					icon = "download"
				}
			}
		}
		AlignWidget align {
			LabelWidget label : 0.0, 0.5, true {
				fontSize = context.getStylePixels("jkop-kit", "regularFont", "2800um")
				fontFamily = context.getStyleString("jkop-kit", "fontFamilyRegular")
				textColor = context.getStyleColor("jkop-kit", "iconButtonTextColor", "#000000")
				padding = context.getStylePixels("jkop-kit", "margin", "2000um")
			}
		}
	}
}

ctor(ctx as GuiApplicationContext)
{
	base(ctx)
	forceCreateWidget()
}

func setWidgetIcon(value as string) as this
{
	icon.setWidgetIcon(value)
	return this
}

func setWidgetText(value as string) as this
{
	label.setWidgetText(value)
	return this
}
