
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2016-2024 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class abstract:

model QueuePeekMessagesModel public
{
	messageId as string
	insertedOn as string
	expiresOn as string
	dequeueCount as int
	messageText as string
}

model QueuePeekMessagesList public
{
	list as QueuePeekMessagesModel[]
}

model ReceivedMessageModel public
{
	messageId as string
	insertedOn as string
	expiresOn as string
	popReceipt as string
	nextVisibleOn as string
	dequeueCount as int
	messageText as string
}

func forAccount(account as string, accountKey as string) static as this
{
	IFDEF "target_node_js" {
		return new AzureStorageQueueConsumerForNodeJS() {
			account account
			accountKey accountKey
		}
	}
	ELSE {
		ERROR "notImplemented"
	}
}

func receiveMessage(queueName as string) abstract async as ReceivedMessageModel?
func peekMessages(queueName as string, numberOfMessages as int = 1) abstract async as QueuePeekMessagesList
func acknowledgeMessage(queueName as string, messageId as string, popReceipt as string) abstract async
