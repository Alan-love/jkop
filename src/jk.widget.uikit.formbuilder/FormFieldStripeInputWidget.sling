
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2020-2023 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.widget
import jk.widget.uikit.core
import jk.widget.uikit.stripe

class #widget:

ui VerticalBoxWidget
{
	spacing = context.getHeightValue("5mm")
	FormFieldTextWidget name {
		formLabel = "Card:"
	}
	FormFieldBlankContainerWidget {
		LayerWithBackgroundColorWidget container  {
			outlineColor = context.getStyleColor("jkop-kit", "stripeCardOutlineColor", "#CCCCCC")
			outlineWidth = context.getStylePixels("jkop-kit", "stripeCardOutlineSize", "1px")
			margin = context.getStylePixels("jkop-kit", "stripeCardPadding", "2mm")
		}
	}
}

ctor(ctx as GuiApplicationContext)
{
	base(ctx)
	forceCreateWidget()
}

var stripeInput as StripeCardInputWidget
var key as string

func initializeWidget override
{
	base.initializeWidget()
	stripeInput = StripeCardInputWidget.forKey(context, key)
	// stripeInput.setWidgetInitializedHandler(func {
	// 	println "initialized"
	// 	Widget.resizeHeight(hbox, Widget.getHeight(name))
	// })
	container.addWidget(stripeInput)
}

func setWidgetKey(value as string) as this
{
	assert value
	key = value
	return this
}

func confirmCardPayment(paymentIntentClientSecret as string, callback as function<void, string, Error>)
{
	assert stripeInput
	stripeInput.confirmCardPayment(paymentIntentClientSecret, callback)
}
