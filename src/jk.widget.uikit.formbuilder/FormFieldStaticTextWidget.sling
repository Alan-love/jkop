
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2020-2023 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.widget.uikit.core
import jk.widget

class is WidgetWithValue #widget:

ui HorizontalBoxWidget
{
	spacing = context.getHeightValue("4mm")
	AlignWidget : 0.4 {
		LabelWidget label : 1.0, 0.5 {
			fontSize = context.getStylePixels("jkop-kit", "regularFont")
			textColor = context.getStyleColor("jkop-kit", "textColor", "#000000")
			fontFamily = context.getStyleString("jkop-kit", "fontFamilyRegular", "Arial")
		}
	}
	LabelWidget value : 1.0 {
		textAlign = LabelWidget.ALIGN_LEFT
		fontSize = context.getStylePixels("jkop-kit", "regularFont")
		textColor = context.getStyleColor("jkop-kit", "textColor", "#000000")
		fontFamily = context.getStyleString("jkop-kit", "fontFamilyRegular", "Arial")
	}
}

ctor(ctx as GuiApplicationContext)
{
	base(ctx)
	forceCreateWidget()
}

pvar isValueRequired = true

func setWidgetFormLabel(value as string) as this
{
	label.setWidgetText(value)
	return this
}

func setWidgetFormValue(str as string) as this
{
	if isValueRequired:
		assert str
	value.setWidgetText(str)
	return this
}

func setWidgetValue(value as object):
	setWidgetFormValue(String.asString(value))

func getWidgetValue as object:
	return value.getWidgetText()

func setWidgetFontItalic(italic as bool) as this
{
	value.setWidgetFontItalic(italic)
	return this
}

func setWidgetTextColor(color as Color) as this
{
	value.setWidgetTextColor(color)
	return this
}

func setWidgetFontSize(fontSize as double #notLiteral) as this
{
	value.setWidgetFontSize(fontSize)
	return this
}
