
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2016-2024 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.awsapi

class is SQSApi:

model ReceiveMessages public
{
	Messages as MessageList[]
}

model MessageList public
{
	Attributes as AttributesProperties
	Body as string
	MD5OfBody as string
	MessageId as string
	ReceiptHandle as string
}

model AttributesProperties public
{
	SenderId as string
	ApproximateFirstReceiveTimestamp as string
	ApproximateReceiveCount as string
	SentTimestamp as string
}

func instance(context as AwsApiContext) static as this:
	return new this() {
		context context
	}

func receiveMessage(queueName as string, maxNumberOfMessages as int = 0, visibilityTimeout as int = 0) async throws Exception as ReceiveMessages
{
	var queueUrl = await getQueueUrl(queueName)
	var payload = new DynamicMap()
	payload.setString("QueueUrl", queueUrl)
	if maxNumberOfMessages >= 1:
		payload.setInteger("MaxNumberOfMessages", maxNumberOfMessages)
	if visibilityTimeout >= 1:
		payload.setInteger("VisibilityTimeout", visibilityTimeout)
	payload.setDynamic("AttributeNames", [ "All" ])
	var request = generateRequest("ReceiveMessage", payload)
	var result = new ReceiveMessages()
	await executeRequest(request, result)
	return result
}
