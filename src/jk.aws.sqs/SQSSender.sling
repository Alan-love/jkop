
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2016-2024 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.awsapi

class is SQSApi:

model Message public
{
	DelaySeconds as int
	MessageAttributes as DynamicMap
	MessageBody as string
	MessageDeduplicationId as string
	MessageGroupId as string
	MessageSystemAttributes as DynamicMap
}

model Response public
{
	MD5OfMessageAttributes as string
	MD5OfMessageBody as string
	MessageId as string
}

model MessageBatchResponse public
{
	Failed as FailedMessage[]
	Successful as SuccessMessage[]
}

model FailedMessage public
{
	Code as string
	Id as string
	Message as string
	SenderFault as bool
}

model SuccessMessage public
{
	Id as string
	MD5OfMessageAttributes as string
	MD5OfMessageBody as string
	MD5OfMessageSystemAttributes as string
	MessageId as string
	SequenceNumber as string
}

model MessageBatch public
{
	Entries as EntriesProperties[]
}

model EntriesProperties public
{
	Id as string
	MessageBody as string
	DelaySeconds as int
	MessageAttributes as DynamicMap
}

model MessageBatchEntries public
{
	Id as string
	ReceiptHandle as string
}

func instance(context as AwsApiContext) static as this:
	return new this() {
		context context
	}

func sendMessage(queueName as string, message as Message) async throws Exception as Response
{
	var body = message.toDynamicMap()
	var queueUrl = await getQueueUrl(queueName)
	body.setString("QueueUrl", queueUrl)
	var request = generateRequest("SendMessage", body)
	var result = new Response()
	await executeRequest(request, result)
	return result
}

func sendMessageBatch(queueName as string, messages as MessageBatch) async throws Exception as MessageBatchResponse
{
	var body = messages.toDynamicMap()
	var queueUrl = await getQueueUrl(queueName)
	body.setString("QueueUrl", queueUrl)
	var request = generateRequest("SendMessage", body)
	var result = new MessageBatchResponse()
	await executeRequest(request, result)
	return result
}

func deleteMessage(queueName as string, receiptHandle as string) async throws Exception
{
	var queueUrl = await getQueueUrl(queueName)
	var payload = new DynamicMap()
	payload.setString("QueueUrl", queueUrl)
	payload.setString("ReceiptHandle", receiptHandle)
	var request = generateRequest("DeleteMessage", payload)
	await executeRequest(request, null)
}

func deleteMessageBatch(queueName as string, entries as vector<MessageBatchEntries>) async throws Exception
{
	var queueUrl = await getQueueUrl(queueName)
	var payload = new DynamicMap()
	payload.setString("QueueUrl", queueUrl)
	payload.setDynamic("Entries", entries)
	var request = generateRequest("DeleteMessageBatch", payload)
	await executeRequest(request, null)
}
