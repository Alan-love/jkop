
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2020-2023 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class #widget:

IFDEF "target_html"
{
	func prepareElement(element as object) override
	{
		base.prepareElement(element)
		HTMLDOM.setStyle(element, "box-shadow", "0 2px 4px 0 rgba(43, 43, 43, 0.1)")
		HTMLDOM.setStyle(element, "z-index", "998")
	}
}

ui LayerWithBackgroundColorWidget
{
	color = context.getStyleColor("jkop-kit", "appBarBackgroundColor", "#FFFFFF")
	HorizontalBoxWidget box {
		LayerWithBackgroundColorWidget {
			color = context.getStyleColor("jkop-kit", "appBarLogoBackgroundColor", "#FFFFFF")
			widthRequest = context.getHeightValue("50mm")
			AlignWidget {
				ImageWidget leftImage {
					imageScaleMethod = ImageWidget.FIT
				}
			}
		}
		AlignWidget align : 1.0 {
			LabelWidget label {
			}
		}
		HorizontalBoxWidget menuItems {
			spacing = context.getStylePixels("jkop-kit", "appBarMenuItemSpacing", "1mm")
			margin = context.getStylePixels("jkop-kit", "appBarMargin", "1mm")
		}
	}
}

func setWidgetLeftImageResource(resource as string) as this
{
	if not leftImage:
		forceCreateWidget()
	leftImage.setWidgetImageResource(resource)
	leftImage.setWidgetImageHeight(context.getStylePixels("jkop-kit", "appBarLeftResourceHeight", "6mm"))
	return this
}

func setWidgetTitle(value as string) as this
{
	label.setWidgetText(value)
	Widget.setLayoutSize(label, -1, Widget.getHeight(label))
	return this
}

func getWidgetTitle as string:
	return label.getWidgetText()

func setWidgetMenuItems(items as vector<Widget>) as this
{
	assert items
	if not menuItems:
		forceCreateWidget()
	foreach widget in items:
		menuItems.addWidget(widget)
	return this
}
