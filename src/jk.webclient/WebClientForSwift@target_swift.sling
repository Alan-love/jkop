
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2016-2024 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.log

class is WebClient:

func executeQuery(ctx as LoggingContext, method as string, url as string, headers as KeyValueList<string,string>?, body as buffer?) async override throws Exception as Response
{
	lang "swift" {{{
		var request = URLRequest(url: URL(string: url)!)
		request.httpMethod = method
		request.timeoutInterval = 30
	}}}
	if headers {
		var iter = headers.iterate()
		while iter.hasNext() {
			var nh = iter.next()
			var key = nh.key
			var value = nh.value
			lang "swift" {{{
				request.setValue(value, forHTTPHeaderField:key)
			}}}
		}
	}
	if body {
		lang "swift" {{{
			request.httpBody = body!.data
		}}}
	}
	var status #mutated = 0
	var hdrs = new KeyValueListForStrings()
	lang "swift" (status, hdrs) {{{
		let (data, response) = try await URLSession.shared.data(for: request)
		if let httpResponse = response as? HTTPURLResponse {
			status = httpResponse.statusCode
		}
	}}}
	// FIXME: Process headers
	return new Response() {
		statusCode String.forInteger(status)
		statusMessage ""
		headers hdrs
		body lang "swift" as buffer {{{ BufferValue.forData(data) }}}
	}
}
