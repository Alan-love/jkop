
/*
 * This file is part of Eqela Jkop
 * Copyright (c) 2016-2024 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.time

class:

const FILE_TYPE_UNKNOWN = 0
const FILE_TYPE_FILE = 1
const FILE_TYPE_DIR = 2

func forFile(file as File) static as this:
	return file.stat()

prop file as File
prop size as long = 0
prop createTime as long = 0L
prop accessTime as long = 0L
prop modifyTime as long = 0L
prop ownerUser as int = 0
prop ownerGroup as int = 0
prop mode as int = 0
prop executable as bool = false
prop type as int = FILE_TYPE_UNKNOWN
prop link as bool = false
prop exists as bool = false

func getCreateTimeUTC as long:
	return createTime + SystemClock.getTimezoneOffsetAsSeconds()

func getAccessTimeUTC as long:
	return accessTime + SystemClock.getTimezoneOffsetAsSeconds()

func getModifyTimeUTC as long:
	return modifyTime + SystemClock.getTimezoneOffsetAsSeconds()

func isFile virtual as bool
{
	if type == FILE_TYPE_FILE:
		return true
	return false
}

func isLink virtual as bool:
	return link

func isDirectory virtual as bool
{
	if type == FILE_TYPE_DIR:
		return true
	return false
}
