class is ScreenForWidget imports cape imports cave imports cave.ui #screen #main:

class MainWidget
{
	ui LayerWidget
	{
		CanvasWidget {
			color = Color.white()
		}
		VerticalScrollerWidget {
			VerticalBoxWidget {
				margin = context.getHeightValue("10mm")
				spacing = context.getHeightValue("10mm")
				LabelWidget {
					text = "test 1"
				}
				LabelWidget {
					text = "test 2"
				}
				LabelWidget {
					text = "test 3"
				}
				LabelWidget {
					text = "test 4"
				}
				LabelWidget {
					text = "test 5"
				}
				LabelWidget {
					text = "test 6"
				}
				LabelWidget {
					text = "test 7"
				}
				ButtonWidget {
					text = "Click me"
					clickHandler = func {
						testbox.addWidget(LabelWidget.forText(context, "SUPERMAN"))
					}
				}
				ButtonWidget {
					text = "Clear"
					clickHandler = func {
						Widget.removeChildrenOf(testbox)
					}
				}
				LayerWidget {
					CanvasWidget {
						Color = Color.forString("#FF0000")
					}
					VerticalBoxWidget testbox {
					}
				}
				LabelWidget {
					text = "test 8"
				}
			}
		}
	}

	func initializeWidget override
	{
		base.initializeWidget()
		testbox.addWidget(LabelWidget.forText(context, "SUPERMAN"))
	}
}

func initialize override
{
	base.initialize()
	var navi = new NavigationWidget(context)
	var ff = FormWidget.forDeclaration(context, FormDeclaration.forDescription(TEXTFILE("myform.form")))
	ff.setActionHandlers({
		"onClickMe" : func {
			PRINT(JSONEncoder.encode(ff.getFormData()))
		},
		"onClickMe2" : func {
			ff.clearFormData()
		},
		"onChangeScreen" : func {
			navi.pushWidget(new MainWidget(context))
		}
	})
	setWidget(navi)
	navi.pushWidget(ff)
}
